

/* KUWAIT TURKISH PARTICIPATION BANK INC.
*
*  All rights are reserved. Reproduction or transmission in whole or in part, in
*  any form or by any means, electronic, mechanical or otherwise, is prohibited
*  without the prior written consent of the copyright owner.
*
*
*  Generator Information
*		Generator				: BOAContainer
*		Generated By			: karadayi
*		Generated Date			: 28/09/2016
*		File Version			: 1.0
*		Purpose					: <Lütfen açıklama giriniz.>
*		Last Modified By		: karadayi
*		Last Modification Date	: 09/01/2018
*
*/
CREATE PROCEDURE [DTG].[tsk_TableColumnDataMask]

AS
	SET NOCOUNT ON
		
	CREATE TABLE #TMP
	(
		TableColumnId INT,
		TermId INT,
		TermName VARCHAR(200),
		InformationType TINYINT,
		DBName VARCHAR(50),
		SchemaName VARCHAR(20),
		TableName VARCHAR(50),
		ColumnName VARCHAR(100),
		DataType VARCHAR(50),
		DataMaskTypeId TINYINT,
		DataMaskType VARCHAR(50),
		SubsetCriteria VARCHAR(50),
		SubsetOperator VARCHAR(20)
	)

	CREATE TABLE #TMP2
	(
		TableColumnId INT,
		TermId INT,
		TermName VARCHAR(200),
		InformationType TINYINT,
		DBName VARCHAR(50),
		SchemaName VARCHAR(20),
		TableName VARCHAR(50),
		ColumnName VARCHAR(100),
		DataType VARCHAR(50),
		DataMaskTypeId TINYINT,
		DataMaskType VARCHAR(50),
		SubsetCriteria VARCHAR(50),
		SubsetOperator VARCHAR(20)
	)

	-- Katalog içerisindeki tablolar
	INSERT INTO #TMP
	SELECT
		TC.TableColumnId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		NULL,
		NULL
	FROM [DTG].[TableColumn] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[Table] AS TBL WITH (NOLOCK) ON
		TBL.TableId = TC.TableId
	INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TBL.TermId
	INNER JOIN DTG.TermDataMask AS TDM WITH (NOLOCK) ON
		TDM.TermId = T.TermId AND
		TDM.IsActive = 1 AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1
	WHERE 
		(TC.IsReference = 1) AND
		(TDM.DataMaskTypeId != 62)
	
	INSERT INTO #TMP
	SELECT
		TC.TableColumnId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		NULL,
		NULL
	FROM [DTG].[TableColumn] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[Table] AS TBL WITH (NOLOCK) ON
		TBL.TableId = TC.TableId
	INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TC.TermId
	INNER JOIN DTG.TermDataMask AS TDM WITH (NOLOCK) ON
		TDM.TermId = T.TermId AND
		TDM.IsActive = 1 AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1
	WHERE 
	    T.TermId NOT IN(1,3,8) AND
		(TDM.DataMaskTypeId != 62)

	-- Taslak içerisindeki tablolar
	INSERT INTO #TMP
	SELECT
		TC.TableColumnDraftId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		NULL,
		NULL
	FROM [DTG].[TableColumnDraft] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[TableDraft] AS TBL WITH (NOLOCK) ON
		TBL.TableDraftId = TC.TableDraftId
	INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TBL.TermId
	INNER JOIN DTG.TermDataMask AS TDM WITH (NOLOCK) ON
		TDM.TermId = T.TermId AND
		TDM.IsActive = 1 AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1
	WHERE 
		(TC.IsReference = 1) AND
		(TDM.DataMaskTypeId != 62)
	
	INSERT INTO #TMP
	SELECT
		TC.TableColumnDraftId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		NULL,
		NULL
	FROM [DTG].[TableColumnDraft] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[TableDraft] AS TBL WITH (NOLOCK) ON
		TBL.TableDraftId = TC.TableDraftId
	INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TC.TermId
	INNER JOIN DTG.TermDataMask AS TDM WITH (NOLOCK) ON
		TDM.TermId = T.TermId AND
		TDM.IsActive = 1 AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1
	WHERE 
	    T.TermId NOT IN(1,3,8) AND
		(TDM.DataMaskTypeId != 62)

	-- Maskelenme durumunu Base Term'ünden miras alan alanları bul
	-- Katalog
	INSERT INTO #TMP
    SELECT
		TC.TableColumnId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		TMP.DataMaskTypeId,
		TMP.DataMaskType,
		NULL,
		NULL
	 FROM [DTG].[TableColumn] AS TC WITH (NOLOCK)
	 INNER JOIN [DTG].[Table] AS TBL WITH (NOLOCK) ON
		 TBL.TableId = TC.TableId
	 INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		 T.TermId = TC.TermId
	 INNER JOIN #TMP AS TMP WITH (NOLOCK) ON
		--TMP.InformationType = 0 AND
		TMP.TermId = T.BaseTermId AND
		TMP.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)

	-- Maskelenme durumunu Base Term'ünden miras alan alanları bul
	-- Taslak
	INSERT INTO #TMP
	SELECT
		TC.TableColumnDraftId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		TMP.DataMaskTypeId,
		TMP.DataMaskType,
		NULL,
		NULL
	FROM [DTG].[TableColumnDraft] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[TableDraft] AS TBL WITH (NOLOCK) ON
		TBL.TableDraftId = TC.TableDraftId
	INNER JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TC.TermId
	INNER JOIN #TMP AS TMP WITH (NOLOCK) ON
		--TMP.InformationType = 0 AND
		TMP.TermId = T.BaseTermId AND
		TMP.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType)

	-- White List'e alınmış kolonları dahil etme ör: AccountSuffix, FromAccountSuffix, vb.
    DELETE TMP FROM #TMP AS TMP
     INNER JOIN [DTG].[TermDataMaskWhiteList] AS WL WITH (NOLOCK) ON
	     WL.TermId = TMP.TermId 
	     AND WL.ColumnName = TMP.ColumnName
	
	-- TableColumnDataMask TableColumnId varolan tablo ile farklı değer içerme olasılığı var
	-- o sebeple TableColumnId ile join'lemiyorum
	INSERT INTO #TMP2
	SELECT
		TC.TableColumnId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		TCM.SubsetCriteria,
		TCM.SubsetOperator
	FROM [DTG].[TableColumn] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[Table] AS TBL WITH (NOLOCK) ON
		TBL.TableId = TC.TableId
	INNER JOIN DTG.TableColumnDataMask AS TCM WITH (NOLOCK) ON
		TCM.DBName = TBL.DBName
		AND TCM.SchemaName = TBL.SchemaName
		AND TCM.TableName = TBL.TableName
		AND TCM.ColumnName = TC.ColumnName
	LEFT JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TC.TermId
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TCM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1

	-- Draftları da ekle	
	INSERT INTO #TMP2
	SELECT
		TC.TableColumnDraftId AS TableColumnId,
		T.TermId,
		T.Name,
		T.Type,
		TBL.DBName,
		TBL.SchemaName,
		TBL.TableName,
		TC.ColumnName,
		[DTG].[fConvertDataTypeForDataMaskProcess](TC.DataType) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		TCM.SubsetCriteria,
		TCM.SubsetOperator
	FROM [DTG].[TableColumnDraft] AS TC WITH (NOLOCK)
	INNER JOIN [DTG].[TableDraft] AS TBL WITH (NOLOCK) ON
		TBL.TableDraftId = TC.TableDraftId
	INNER JOIN DTG.TableColumnDataMask AS TCM WITH (NOLOCK) ON
		TCM.DBName = TBL.DBName
		AND TCM.SchemaName = TBL.SchemaName
		AND TCM.TableName = TBL.TableName
		AND TCM.ColumnName = TC.ColumnName
	LEFT JOIN [DTG].[Term] AS T WITH (NOLOCK) ON
		T.TermId = TC.TermId
	LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TCM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = 1
	
	-- TableColumnDataMask'da kayıtlı olanların önceliği var
	-- O sebeple TermDataMask'ta da aynı kolon için kayıt geliyorsa onu ez
	-- SubsetCriteria'dan dolayı kayıt gelmiş olabilir, öyleyse sadece SubsetCriteria alanlarını ez
	UPDATE #TMP
		SET #TMP.DataMaskTypeId = ISNULL(#TMP2.DataMaskTypeId, #TMP.DataMaskTypeId),
			#TMP.DataMaskType = ISNULL(#TMP2.DataMaskType, #TMP.DataMaskType),
			#TMP.SubsetCriteria = #TMP2.SubsetCriteria,
			#TMP.SubsetOperator = #TMP2.SubsetOperator
	  FROM #TMP WITH (NOLOCK)
	 INNER JOIN #TMP2 WITH (NOLOCK) ON
		#TMP.DBName = #TMP2.DBName
		AND #TMP.SchemaName = #TMP2.SchemaName
		AND #TMP.TableName = #TMP2.TableName
		AND #TMP.ColumnName = #TMP2.ColumnName

	-- Yukarıda update edilenleri çıkar
	DELETE T2 FROM #TMP2 T2
	 INNER JOIN #TMP T WITH (NOLOCK) ON
		T.DBName = T2.DBName
		AND T.SchemaName = T2.SchemaName
		AND T.TableName = T2.TableName
		AND T.ColumnName = T2.ColumnName
	
	-- TermDataMask'da kaydı olmayan ama maskelenecek bir alan varsa onu da ekle
	INSERT INTO #TMP
	SELECT
		TableColumnId,
		TermId,
		TermName,
		InformationType,
		DBName,
		SchemaName,
		TableName,
		ColumnName,
		DataType,
		DataMaskTypeId,
		DataMaskType,
		SubsetCriteria,
		SubsetOperator
	FROM #TMP2
	
	 -- Alt ortamlarına aktarımlarda maskelenmesi gereken tablo alanlarının listesi
	 TRUNCATE TABLE [BOACatalog].[DTG].[TableColumnDataMaskDetail] --Clear Table
	 INSERT INTO [BOACatalog].[DTG].[TableColumnDataMaskDetail]
	 (TermName,DatabaseName,SchemaName,TableName,ColumnName,DataType,DataMaskTypeId,DataMaskType,FullColumnName,SubsetCriteria,SubsetOperator)
	 SELECT DISTINCT
		TermName,
		DBName,
		SchemaName,
		TableName,
		ColumnName,
		DataType,
		DataMaskTypeId,
		DataMaskType,
		(SchemaName + '.' + TableName + '.' + ColumnName) AS FullColumnName,
		SubsetCriteria,
		SubsetOperator
	  FROM #TMP
	 ORDER BY DBName, SchemaName, TableName

	 -- İstisna olarak tanımlanmış tabloları listeden çıkar. Bu tablolar manual olarak bozulacak.
	 DELETE TDM
	  FROM [BOACatalog].[DTG].[TableColumnDataMaskDetail] AS TDM WITH (NOLOCK)
	 INNER JOIN [BOACatalog].[DTG].TableDataMaskException AS TDE WITH (NOLOCK)
		ON  TDE.DBName = TDM.DatabaseName 
		AND TDE.SchemaName = TDM.SchemaName 
		AND TDE.TableName = TDM.TableName

	 UPDATE [BOACatalog].[DTG].[TableColumnDataMaskDetail]
		SET Production = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Master' AND Environment = 'Production'),
			Development = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Disorder' AND Environment = 'Development'),
			Test = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Disorder' AND Environment = 'Test'),
			PreProduction = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Disorder' AND Environment = 'PreProduction'),
			BugFix = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Disorder' AND Environment = 'BugFix'),
			[Replication] = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Replication' AND Environment = 'Production'),
			Clone = (SELECT D.Location FROM [BOACatalog].[DTG].[DatabaseLocation] AS D WITH (NOLOCK) WHERE D.DBName = T.DatabaseName AND [Type] = 'Clone' AND Environment = 'Production')
	   FROM [BOACatalog].[DTG].[TableColumnDataMaskDetail] AS T

	 DELETE FROM BOACatalog.DTG.[TableColumnDataMaskDetail]
	  WHERE DataMaskType='NO_MASKING' AND SubsetCriteria IS NULL