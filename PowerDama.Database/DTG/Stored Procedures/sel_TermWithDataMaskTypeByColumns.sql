
/* KUWAIT TURKISH PARTICIPATION BANK INC.
*
*  All rights are reserved. Reproduction or transmission in whole or in part, in
*  any form or by any means, electronic, mechanical or otherwise, is prohibited
*  without the prior written consent of the copyright owner.
*
*
*  Generator Information
*		Generator				: BOAContainer
*		Generated By			: karadayi
*		Generated Date			: 16/06/2016
*		File Version			: 1.0
*		Purpose					: <Lütfen açıklama giriniz.>
*		Last Modified By		: karadayi
*		Last Modification Date	: 02/05/2018
*
*/
CREATE PROCEDURE [DTG].[sel_TermWithDataMaskTypeByColumns]
	@Name VARCHAR(200) = NULL,
	@NameEN VARCHAR(200) = NULL,
	@Level1Domain INT = NULL,
	@Level2Domain INT = NULL,
	@Sensitivity TINYINT = NULL,
	@Type TINYINT = NULL,
	@DataOwner INT = NULL,
	@DataManager INT = NULL,
	@DataSteward INT = NULL,
	@LanguageId TINYINT = 1
AS
	SET NOCOUNT ON;

	-- Bu parametre her halukarda 1 olmalı
	-- Geçmişe yönelik bir parametre olduğu için kaldıramıyorum
	SET @Type = 1

	-- Term Default Maskeleme Tipi

	SELECT
		T.TermId,
		T.TermCode,
		T.Name,
		T.NameEN,
		T.[Description],
		T.DescriptionEN,
		L1.ParamCode AS Level1Domain,
		L1.ParamDescription AS Level1DomainName,
		L2.ParamCode AS Level2Domain,
		L2.ParamDescription AS Level2DomainName,
		Inf.ParamCode AS [InformationTypeId],
		Inf.ParamValue AS [InformationType],
		S.ParamCode AS SensitivityId,
		S.ParamValue AS Sensitivity,
		ow.[WorkGroupId] AS DataOwnerId,
		ow.[Name] AS DataOwner,
		mn.[WorkGroupId] AS DataManagerId,
		mn.[Name] AS DataManager,
		st.[WorkGroupId] AS DataStewardId,
		st.[Name] AS DataSteward,
		T.BaseTermId,
		TR2.Value AS IsBaseTerm,
		--[DTG].[fConvertDataTypeForDataMaskProcess](ISNULL(DTM.Value, DTM2.Value)) AS DataType,
		[DTG].[fConvertDataTypeForDataMaskProcess](DTM2.Value) AS DataType,
		--ISNULL(DTM.Value, DTM2.Value) AS DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		T.UserName,
		T.UpdateUserName
	 FROM [DTG].[Term] T WITH (NOLOCK)
	 INNER JOIN DTG.vParameter Inf WITH (NOLOCK) ON
		Inf.ParamGroupCode = 'DTG' AND
		Inf.ParamType = 'INFORMATIONTYPE' AND
		T.[Type] = Inf.ParamCode AND 
		Inf.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter S WITH (NOLOCK) ON
		S.ParamGroupCode = 'DTG' AND
		S.ParamType = 'SENSITIVITY' AND
		T.Sensitivity = S.ParamCode AND 
		S.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter L1 WITH (NOLOCK) 
		   ON L1.[ParamCode] = T.Level1Domain 
		   AND L1.Paramtype='BusinessArchitecture' 
		   AND L1.LanguageId = @LanguageId
	LEFT JOIN DTG.vParameter L2 WITH (NOLOCK) 
		   ON L2.[ParamCode] = T.Level2Domain 
		   AND L2.Paramtype='BusinessArchitecture' 
		   AND L2.LanguageId = @LanguageId
	 LEFT JOIN [BOA].[AUT].[WorkGroup] ow WITH (NOLOCK) 
		ON ow.[WorkGroupId] = T.DataOwner
	 LEFT JOIN [BOA].[AUT].[WorkGroup] mn WITH (NOLOCK) 
		ON mn.[WorkGroupId] = T.DataManager
	 LEFT JOIN [BOA].[AUT].[WorkGroup] st WITH (NOLOCK) 
		ON st.[WorkGroupId] = T.DataSteward
	 LEFT JOIN [DTG].[TermRule] TR WITH (NOLOCK) 
		ON TR.TermId = T.TermId AND 
		TR.TemplateType = 3
	 LEFT JOIN [DTG].[DataType] DT WITH (NOLOCK) 
		ON DT.DataTypeId = CAST(TR.Value AS INT)
	 LEFT JOIN [DTG].[TermRule] TR2 WITH (NOLOCK)  
		ON TR2.TermId = T.TermId AND 
		TR2.TemplateType = 1
	 
	 --LEFT JOIN DTG.DataTypeMatch DTM WITH (NOLOCK)  
		--ON TDM.DataType = DTM.Value AND
		--DTM.DataTypeLanguageId = 1     
	 LEFT JOIN DTG.DataTypeMatch DTM2 WITH (NOLOCK)
		ON DTM2.DataTypeId = DT.DataTypeId AND
		DTM2.DataTypeLanguageId = 1
	 LEFT JOIN [DTG].[TermDataMask] TDM WITH (NOLOCK) 
		ON TDM.TermId = T.TermId AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](DTM2.Value)
	 LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = @LanguageId
	WHERE
		((@Name IS NULL) OR 
		(T.[Name] LIKE '%' + @Name + '%'))
	AND ((@NameEN IS NULL) OR 
		(T.[NameEN] LIKE '%' + @NameEN + '%'))
	AND ((@Level1Domain IS NULL) OR 
		T.[Level1Domain] = @Level1Domain)
	AND ((@Level2Domain IS NULL) OR 
		T.[Level2Domain] = @Level2Domain)
	AND ((@Type IS NULL) OR 
		T.[Type] = @Type)
	AND ((@Sensitivity IS NULL) OR 
		@Sensitivity = 0 OR 
		T.Sensitivity = @Sensitivity)
	AND ((@DataOwner IS NULL) OR 
		T.DataOwner = @DataOwner)
	AND ((@DataManager IS NULL) OR 
		T.DataManager = @DataManager)
	AND ((@DataSteward IS NULL) OR 
		T.DataSteward = @DataSteward)

	UNION	

	-- Term ile ilişkili Tablo kolonlarında Term'ün default data tipinden farklı data tipleri olan
	-- ve [DTG].[TermDataMask] tablosuna daha kaydı girilmemiş kayıtlar ile birleştir

	SELECT DISTINCT
		T.TermId,
		T.TermCode,
		T.Name,
		T.NameEN,
		T.[Description],
		T.DescriptionEN,
		L1.ParamCode AS Level1Domain,
		L1.ParamDescription AS Level1DomainName,
		L2.ParamCode AS Level2Domain,
		L2.ParamDescription AS Level2DomainName,
		Inf.ParamCode AS [InformationTypeId],
		Inf.ParamValue AS [InformationType],
		S.ParamCode AS SensitivityId,
		S.ParamValue AS Sensitivity,
		ow.[WorkGroupId] AS DataOwnerId,
		ow.[Name] AS DataOwner,
		mn.[WorkGroupId] AS DataManagerId,
		mn.[Name] AS DataManager,
		st.[WorkGroupId] AS DataStewardId,
		st.[Name] AS DataSteward,
		T.BaseTermId,
		TR2.Value AS IsBaseTerm,
		[DTG].[fConvertDataTypeForDataMaskProcess](C.DataType) AS DataType,
		--C.DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		T.UserName,
		T.UpdateUserName
	 FROM [DTG].[Term] T WITH (NOLOCK)
	 INNER JOIN DTG.TableColumn C WITH (NOLOCK) ON
		C.TermId = T.TermId
	 --INNER JOIN DTG.DataTypeMatch DTM WITH (NOLOCK) ON
		--DTM.Value = UPPER(C.DataType) AND
		--DTM.DataTypeLanguageId = 1
	 INNER JOIN DTG.vParameter Inf WITH (NOLOCK) ON
		Inf.ParamGroupCode = 'DTG' AND
		Inf.ParamType = 'INFORMATIONTYPE' AND
		T.[Type] = Inf.ParamCode AND 
		Inf.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter S WITH (NOLOCK) ON
		S.ParamGroupCode = 'DTG' AND
		S.ParamType = 'SENSITIVITY' AND
		T.Sensitivity = S.ParamCode AND 
		S.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter L1 WITH (NOLOCK) 
		   ON L1.[ParamCode] = T.Level1Domain 
		   AND L1.Paramtype='BusinessArchitecture' 
		   AND L1.LanguageId = @LanguageId
	LEFT JOIN DTG.vParameter L2 WITH (NOLOCK) 
		   ON L2.[ParamCode] = T.Level2Domain 
		   AND L2.Paramtype='BusinessArchitecture' 
		   AND L2.LanguageId = @LanguageId
	 LEFT JOIN [BOA].[AUT].[WorkGroup] ow WITH (NOLOCK) 
		ON ow.[WorkGroupId] = T.DataOwner
	 LEFT JOIN [BOA].[AUT].[WorkGroup] mn WITH (NOLOCK) 
		ON mn.[WorkGroupId] = T.DataManager
	 LEFT JOIN [BOA].[AUT].[WorkGroup] st WITH (NOLOCK) 
		ON st.[WorkGroupId] = T.DataSteward
	 --LEFT JOIN [DTG].[TermRule] TR WITH (NOLOCK) 
		--ON TR.TermId = T.TermId AND 
		--TR.TemplateType = 3
	 --LEFT JOIN [DTG].[DataType] DT WITH (NOLOCK) 
		--ON DT.DataTypeId = CAST(TR.Value AS INT)
	 LEFT JOIN [DTG].[TermRule] TR2 WITH (NOLOCK) 
		ON TR2.TermId = T.TermId AND 
		TR2.TemplateType = 1
	 LEFT JOIN [DTG].[TermDataMask] TDM WITH (NOLOCK) 
		ON TDM.TermId = T.TermId AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](C.DataType)
		--TDM.DataType = C.DataType
	 LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = @LanguageId
	WHERE
		((@Name IS NULL) OR 
		(T.[Name] LIKE '%' + @Name + '%'))
	AND ((@NameEN IS NULL) OR 
		(T.[NameEN] LIKE '%' + @NameEN + '%'))
	AND ((@Level1Domain IS NULL) OR 
		T.[Level1Domain] = @Level1Domain)
	AND ((@Level2Domain IS NULL) OR 
		T.[Level2Domain] = @Level2Domain)
	AND ((@Type IS NULL) OR 
		T.[Type] = @Type)
	AND ((@Sensitivity IS NULL) OR 
		@Sensitivity = 0 OR 
		T.Sensitivity = @Sensitivity)
	AND ((@DataOwner IS NULL) OR 
		T.DataOwner = @DataOwner)
	AND ((@DataManager IS NULL) OR 
		T.DataManager = @DataManager)
	AND ((@DataSteward IS NULL) OR 
		T.DataSteward = @DataSteward)

	UNION

	-- Tabloların Id alanları direkt Id Kavram'ına bağlandığı için
	-- bu tabloların Id alanlarına referans vermiş ForeignKey'lerin de maskelenebilmesi için
	-- tabloların ilişkilendirildiği Varlık tipindeki Kavram'lar üzerinden gitmek gerekiyor
	-- Örneğin BranchId diye bir kavram yok ve eğer tablolar üzerindeki BranchId alanları maskelenmek isterse
	-- Şube Kavramı ve ilkişkilendirildiği Branch tablosu ile hem BranchId'ye hem de bu alanla ilişkili ForeignKey alanlara ulaşılır
	
	SELECT DISTINCT
		--TBL.DBName + '.' + TBL.SchemaName + '.' + TBL.TableName AS [Table],
		T.TermId,
		T.TermCode,
		T.Name + ' ('+ C.ColumnName + ')' AS Name,
		T.NameEN + ' ('+ C.ColumnName + ')' AS NameEN,
		T.[Description],
		T.DescriptionEN,
		L1.ParamCode AS Level1Domain,
		L1.ParamDescription AS Level1DomainName,
		L2.ParamCode AS Level2Domain,
		L2.ParamDescription AS Level2DomainName,
		Inf.ParamCode AS [InformationTypeId],
		Inf.ParamValue AS [InformationType],
		S.ParamCode AS SensitivityId,
		S.ParamValue AS Sensitivity,
		ow.[WorkGroupId] AS DataOwnerId,
		ow.[Name] AS DataOwner,
		mn.[WorkGroupId] AS DataManagerId,
		mn.[Name] AS DataManager,
		st.[WorkGroupId] AS DataStewardId,
		st.[Name] AS DataSteward,
		T.BaseTermId,
		TR2.Value AS IsBaseTerm,
		[DTG].[fConvertDataTypeForDataMaskProcess](C.DataType) AS DataType,
		--C.DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		T.UserName,
		T.UpdateUserName
	 FROM [DTG].[Term] T WITH (NOLOCK)
	 INNER JOIN DTG.[Table] TBL WITH (NOLOCK) ON
		T.TermId = TBL.TermId
	 INNER JOIN DTG.TableColumn C WITH (NOLOCK) ON
		C.TableId = TBL.TableId AND C.IsReference = 1
	 --INNER JOIN DTG.DataTypeMatch DTM WITH (NOLOCK) ON
		--DTM.Value = C.DataType AND
		--DTM.DataTypeLanguageId = 1
	 INNER JOIN DTG.vParameter Inf WITH (NOLOCK) ON
		Inf.ParamGroupCode = 'DTG' AND
		Inf.ParamType = 'INFORMATIONTYPE' AND
		T.[Type] = Inf.ParamCode AND 
		Inf.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter S WITH (NOLOCK) ON
		S.ParamGroupCode = 'DTG' AND
		S.ParamType = 'SENSITIVITY' AND
		T.Sensitivity = S.ParamCode AND 
		S.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter L1 WITH (NOLOCK) 
		   ON L1.[ParamCode] = T.Level1Domain 
		   AND L1.Paramtype='BusinessArchitecture' 
		   AND L1.LanguageId = @LanguageId
	LEFT JOIN DTG.vParameter L2 WITH (NOLOCK) 
		   ON L2.[ParamCode] = T.Level2Domain 
		   AND L2.Paramtype='BusinessArchitecture' 
		   AND L2.LanguageId = @LanguageId
	 LEFT JOIN [BOA].[AUT].[WorkGroup] ow WITH (NOLOCK) 
		ON ow.[WorkGroupId] = T.DataOwner
	 LEFT JOIN [BOA].[AUT].[WorkGroup] mn WITH (NOLOCK) 
		ON mn.[WorkGroupId] = T.DataManager
	 LEFT JOIN [BOA].[AUT].[WorkGroup] st WITH (NOLOCK) 
		ON st.[WorkGroupId] = T.DataSteward
	 --LEFT JOIN [DTG].[TermRule] TR WITH (NOLOCK) 
		--ON TR.TermId = T.TermId AND 
		--TR.TemplateType = 3
	 --LEFT JOIN [DTG].[DataType] DT WITH (NOLOCK) 
		--ON DT.DataTypeId = CAST(TR.Value AS INT)
	 LEFT JOIN [DTG].[TermRule] TR2 WITH (NOLOCK) 
		ON TR2.TermId = T.TermId AND 
		TR2.TemplateType = 1
	 LEFT JOIN [DTG].[TermDataMask] TDM WITH (NOLOCK) 
		ON TDM.TermId = T.TermId AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](C.DataType)
		--TDM.DataType = C.DataType
	 LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = @LanguageId
	WHERE
		((@Name IS NULL) OR 
		(T.[Name] LIKE '%' + @Name + '%'))
	AND ((@NameEN IS NULL) OR 
		(T.[NameEN] LIKE '%' + @NameEN + '%'))
	AND ((@Level1Domain IS NULL) OR 
		T.[Level1Domain] = @Level1Domain)
	AND ((@Level2Domain IS NULL) OR 
		T.[Level2Domain] = @Level2Domain)
	AND (T.[Type] = 0)
	AND ((@Sensitivity IS NULL) OR 
		@Sensitivity = 0 OR 
		T.Sensitivity = @Sensitivity)
	AND ((@DataOwner IS NULL) OR 
		T.DataOwner = @DataOwner)
	AND ((@DataManager IS NULL) OR 
		T.DataManager = @DataManager)
	AND ((@DataSteward IS NULL) OR 
		T.DataSteward = @DataSteward)

	UNION

	SELECT DISTINCT
		--TBL.DBName + '.' + TBL.SchemaName + '.' + TBL.TableName AS [Table],
		T.TermId,
		T.TermCode,
		T.Name + ' ('+ C.ColumnName + ')' AS Name,
		T.NameEN + ' ('+ C.ColumnName + ')' AS NameEN,
		T.[Description],
		T.DescriptionEN,
		L1.ParamCode AS Level1Domain,
		L1.ParamDescription AS Level1DomainName,
		L2.ParamCode AS Level2Domain,
		L2.ParamDescription AS Level2DomainName,
		Inf.ParamCode AS [InformationTypeId],
		Inf.ParamValue AS [InformationType],
		S.ParamCode AS SensitivityId,
		S.ParamValue AS Sensitivity,
		ow.[WorkGroupId] AS DataOwnerId,
		ow.[Name] AS DataOwner,
		mn.[WorkGroupId] AS DataManagerId,
		mn.[Name] AS DataManager,
		st.[WorkGroupId] AS DataStewardId,
		st.[Name] AS DataSteward,
		T.BaseTermId,
		TR2.Value AS IsBaseTerm,
		[DTG].[fConvertDataTypeForDataMaskProcess](C2.DataType) AS DataType,
		--C2.DataType,
		DM.[ParamCode] AS DataMaskTypeId,
		DM.[ParamValue] AS DataMaskType,
		T.UserName,
		T.UpdateUserName
	 FROM [DTG].[Term] T WITH (NOLOCK)
	 INNER JOIN DTG.[Table] TBL WITH (NOLOCK) ON
		T.TermId = TBL.TermId
	 INNER JOIN DTG.TableColumn C WITH (NOLOCK) ON
		C.TableId = TBL.TableId AND C.IsReference = 1
	 INNER JOIN DTG.TableColumn C2 WITH (NOLOCK) ON
		C2.TermId = T.TermId
	 --INNER JOIN DTG.DataTypeMatch DTM WITH (NOLOCK) ON
		--DTM.Value = UPPER(C2.DataType) AND
		--DTM.DataTypeLanguageId = 1
	 INNER JOIN DTG.vParameter Inf WITH (NOLOCK) ON
		Inf.ParamGroupCode = 'DTG' AND
		Inf.ParamType = 'INFORMATIONTYPE' AND
		T.[Type] = Inf.ParamCode AND 
		Inf.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter S WITH (NOLOCK) ON
		S.ParamGroupCode = 'DTG' AND
		S.ParamType = 'SENSITIVITY' AND
		T.Sensitivity = S.ParamCode AND 
		S.LanguageId = @LanguageId
	 LEFT JOIN DTG.vParameter L1 WITH (NOLOCK) 
		   ON L1.[ParamCode] = T.Level1Domain 
		   AND L1.Paramtype='BusinessArchitecture' 
		   AND L1.LanguageId = @LanguageId
	LEFT JOIN DTG.vParameter L2 WITH (NOLOCK) 
		   ON L2.[ParamCode] = T.Level2Domain 
		   AND L2.Paramtype='BusinessArchitecture' 
		   AND L2.LanguageId = @LanguageId
	 LEFT JOIN [BOA].[AUT].[WorkGroup] ow WITH (NOLOCK) 
		ON ow.[WorkGroupId] = T.DataOwner
	 LEFT JOIN [BOA].[AUT].[WorkGroup] mn WITH (NOLOCK) 
		ON mn.[WorkGroupId] = T.DataManager
	 LEFT JOIN [BOA].[AUT].[WorkGroup] st WITH (NOLOCK) 
		ON st.[WorkGroupId] = T.DataSteward
	 LEFT JOIN [DTG].[TermRule] TR WITH (NOLOCK) 
		ON TR.TermId = T.TermId AND 
		TR.TemplateType = 3
	 LEFT JOIN [DTG].[DataType] DT WITH (NOLOCK) 
		ON DT.DataTypeId = CAST(TR.Value AS INT)
	 LEFT JOIN [DTG].[TermRule] TR2 WITH (NOLOCK) 
		ON TR2.TermId = T.TermId AND 
		TR2.TemplateType = 1
	 LEFT JOIN [DTG].[TermDataMask] TDM WITH (NOLOCK) 
		ON TDM.TermId = T.TermId AND
		TDM.DataType = [DTG].[fConvertDataTypeForDataMaskProcess](C2.DataType)
		--TDM.DataType = C2.DataType
	 LEFT JOIN DTG.vParameter DM WITH (NOLOCK) 
		ON DM.[ParamCode] = TDM.DataMaskTypeId AND 
		DM.Paramtype='DATAMASK' AND 
		DM.LanguageId = @LanguageId
	WHERE
		((@Name IS NULL) OR 
		(T.[Name] LIKE '%' + @Name + '%'))
	AND ((@NameEN IS NULL) OR 
		(T.[NameEN] LIKE '%' + @NameEN + '%'))
	AND ((@Level1Domain IS NULL) OR 
		T.[Level1Domain] = @Level1Domain)
	AND ((@Level2Domain IS NULL) OR 
		T.[Level2Domain] = @Level2Domain)
	AND (T.[Type] = 0)
	AND ((@Sensitivity IS NULL) OR 
		@Sensitivity = 0 OR 
		T.Sensitivity = @Sensitivity)
	AND ((@DataOwner IS NULL) OR 
		T.DataOwner = @DataOwner)
	AND ((@DataManager IS NULL) OR 
		T.DataManager = @DataManager)
	AND ((@DataSteward IS NULL) OR 
		T.DataSteward = @DataSteward)

ORDER BY TermId DESC